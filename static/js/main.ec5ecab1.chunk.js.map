{"version":3,"sources":["store/actions/types.js","store/reducers/base-reducer.js","utils/constants.js","config.js","utils/utils.js","store/reducers/list-reducer.js","store/reducers/index.js","utils/api.js","store/sagas/common-sagas.js","utils/urlUtils.js","utils/entity.js","locale/lt.js","store/sagas/app-sagas.js","store/sagas/index.js","store/store.js","components/Spinner.jsx","store/actions/list-actions.js","components/ListOfLists.jsx","utils/listUtils.js","utils/hotkeys.js","components/ListsApp.jsx","components/TasksList.jsx","components/TasksDoneList.jsx","components/TasksApp.jsx","components/Move.jsx","components/Failure.jsx","components/App.jsx","components/Status.jsx","components/User.jsx","index.js"],"names":["types","ADD_OR_OPEN_LIST","CHECK_AND_SAVE","DATA_CONFLICT","PREPEND","IMPORT_LIST","EXPORT_LIST","MOVE_CHOOSE","MOVE_TO","COPY_OR_MOVE","PLAN_WEEK","REFRESH_LIST","LIST_OF_LISTS","NEW_LIST","REMOVE_LIST","UPDATE_LIST","GET_A_LIST","Object","keys","forEach","key","all","type","full_type","concat","push","Error","BaseReducer","classCallCheck","this","initialState","ACTION_HANDLERS","handleActions","handler","bind","state","action","constants","mode","MODE_LOADING","MODE_ERROR","MODE_LIST_OF_LISTS","MODE_A_LIST","MODE_MOVE","config","devHost","apiHost","separatorString","listsAddon","settingsAddon","maxTaskLength","loadingStringLength","user","id","name","settings","openListIfExists","addNewAt","displayListLength","displayDoneLength","displayLast","settingsConfig","explain","default","min","max","field","statusNode","document","getElementById","userNode","appNode","footerNode","clickSound","version","sortArrOfObjectsByParam","arrToSort","sortBy","sortDesc","sort","a","b","moveToAnother","fromA","toB","i","toTop","trans","splice","A","B","_","unique","moveToEnd","items","moveToTop","moveFromTo","fromPos","toPos","removeItem","concatTwoJSONs","json1","json2","JSON","stringify","parse","prependToJSON","strng","jsn","removeTask","filter","item","overLength","which","length","CONFIG","grabDate","someDateStr","toLocalTime","substr","grabTime","utcDateStr","Date","toString","replace","toISOString","list_reducer","AppReducer","_this$ACTION_HANDLERS","_this","possibleConstructorReturn","getPrototypeOf","call","defineProperty","REQUEST","listOfListsRequest","SUCCESS","listOfListsFetched","listOfListsRefreshed","removeListRequest","listSaved","alistRequest","aListFetched","checkAList","moveTo","prependRequest","importListRequest","exportListRequest","addAListRequest","planWeek","ERROR","error","dataConflict","objectSpread","status_msg","CONST","lists","Utils","payload","a_list","from_list","data","task","date","toLocaleTimeString","combineReducers","app","callApi","url","options","opt","headers","Accept","Content-Type","credentials","addHeaders","fetch","then","response","contentType","get","isJson","indexOf","status","Promise","resolve","json","text","statusText","message","callGet","method","callPost","body","callUpdate","callDelete","fetchItemSaga","removeItemSaga","updateItemSaga","createItemSaga","actionType","result","regenerator_default","wrap","_context","prev","next","sent","put","t0","FAILURE","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","_id","_marked4","getBaseUrl","getListsUrl","getAListUrl","listId","NewTaskEntity","userId","lastAction","tasks","done","DAYS","MONTHS","checkAndSave","getAListRequest","getAListSuccess","findOrCreateListByName","addOrOpenListsSaga","generalFailure","importListSaga","exportListSaga","moveTaskToAnotherListSaga","copyOrMoveToNewListSaga","prependToAListSaga","removeTaskFromListSaga","listSagas","UrlUtils","app_sagas_marked","new_data","originalList","previousAction","taskToAdd","abrupt","listData","app_sagas_marked2","app_sagas_marked3","app_sagas_marked4","_context5","_marked5","listName","listOfLists","filtered","_context6","e","_marked6","_context7","_marked7","now","shift_date","_loop","shift","_context9","mark","_context8","getTime","getDay","getMonth","getDate","delegateYield","t1","_marked8","_context10","_marked9","urlFirst","urlSecond","firstList","second","_context11","firstListId","secondListId","_marked10","urlThisList","urlToThatList","thisList","toThatList","_context12","toListId","_marked11","_context13","_marked12","_context14","move","_marked13","_context15","_marked14","_context16","fromListId","_marked15","_context17","takeEvery","_marked16","RootSaga","appSagas","sagas_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Spinner","react_default","createElement","className","getListOfLists","reject","getAList","removeList","addOrOpenAList","prependToAList","importList","exportList","moveOutside","moveToList","copyOrMoveToNew","ListOfLists","hotKeyedListName","props","hotKeys","corresponding","elem","strongify","str","letter","n","toLowerCase","substring","contractedListItemHeader","list","sign","isContracted","colSpan","onClick","toggleContracted","assertThisInitialized","contractedTitle","aria-hidden","contractedListItems","map","displayIndentedListRow","contractedList","prepareListForDisplaying","indent","displayListRow","itemClass","deletable","noOfTasks","updatedDateOrTime","openList","immutable","updatedAt","displayList","isList","Component","makeContractableList","dashPos","used","registerHotKeys","checkKeyPressed","$","on","disableHotKeys","off","playSound","play","ListsApp","context","pressed","String","fromCharCode","preventDefault","listNameInput","focus","reload","k","openAList","addHotKeys","newKey","findFreeKey","keyIsNotOccupied","len","pretender","actions","onNameChange","setState","target","value","handleSubmit","listTitle","beContracted","newList","handleKeyDownAtListInput","keyCode","blur","immutableLists","title","_this2","components_ListOfLists","onSubmit","ref","input","onFocus","onBlur","onKeyDown","onChange","disabled","trim","connect","dispatch","bindActionCreators","TaskList","element","index","highlightIndex","taskTruncated","taskAsDisplayed","href","rel","openListByName","omitted","itemIndex","processTaskText","hightlightOnDemand","delete","procrastinate","postpone","taskListDisplayed","shouldOmit","expand","slice","displayTask","TasksDoneList","undone","TasksApp","calculatePostponePosition","number","Math","floor","doneTask","dataToSave","prepareClone","moved","itemsToDo","itemsDone","serialize","unDoneTask","clearDone","procrastinateTask","postponeTask","changeListName","listNameOnEdit","listChanger","editListName","taskInput","previous_list","handleHeaderSubmit","handleKeyDownAtTask","handleKeyDownAtHeader","makeListOption","displayImportBlock","immutables","displayExportBlock","exportables","manageHeader","headerInput","defaultValue","prepend","highLightIndex","reloadNeeded","expandToDo","expandDone","clone","object","res","markTitle","markGlyphicon","expandToDoGlyphicon","expandDoneGlyphicon","components_TasksDoneList","TasksList","Move","back","copy","displayToButton","newListName","onListInputChange","movingItem","Failure","defaultReload","location","msg","App","switcher","components_ListsApp","components_TasksApp","components_Move","components_Failure","openAtStartup","listActions","Status","User","normaliser","val","base","versionColor","style","color","process","src","onbeforeunload","middleware","devToolsExtension","console","log","createLogger","store","middlewares","sagaMiddleware","createSagaMiddleware","thunk","toConsumableArray","createStore","applyMiddleware","apply","runSaga","run","configureStore","buildStore","ReactDOM","render","es","components_App","components_Status","components_User"],"mappings":"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","file":"static/js/main.ec5ecab1.chunk.js","sourcesContent":["const types = {\n  ADD_OR_OPEN_LIST: null,\n  CHECK_AND_SAVE: null,\n  DATA_CONFLICT: null,\n  PREPEND: null,\n  IMPORT_LIST: null,\n  EXPORT_LIST: null,\n  MOVE_CHOOSE: null,\n  MOVE_TO: null,\n  COPY_OR_MOVE: null,\n  PLAN_WEEK: null,\n  REFRESH_LIST: 'async',\n  LIST_OF_LISTS: 'async',\n  NEW_LIST: 'async',\n  REMOVE_LIST: 'async',\n  UPDATE_LIST: 'async',\n  GET_A_LIST: 'async',\n};\n\nObject.keys(types).forEach((key) => {\n  if (types[key] === 'async') {\n    types[key] = {\n      all: [],\n    };\n    ['REQUEST', 'SUCCESS', 'FAILURE'].forEach((type) => {\n      const full_type = `${key}_${type}`;\n      types[key][type] = full_type;\n      types[key].all.push(full_type);\n    });\n  } else if (types[key] === null) {\n    types[key] = key;\n  } else {\n    throw new Error('Type value must be \"async\" or null');\n  }\n});\n\nexport default types;\n","export default class BaseReducer {\n  constructor() {\n    this.initialState = {};\n    this.ACTION_HANDLERS = {};\n    this.handleActions = this.handler.bind(this);\n  }\n\n  handler(state, action) {\n    if (!state) {\n      state = this.initialState;\n    }\n    const handler = this.ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n  }\n}\n","export default {\n  mode: {\n    MODE_LOADING: 'LOADING',\n    MODE_ERROR: 'ERROR',\n    MODE_LIST_OF_LISTS: 'LIST_OF_LISTS',\n    MODE_A_LIST: 'GET_A_LIST',\n    MODE_MOVE: 'MOVE',\n    DATA_CONFLICT: 'DATA_CONFLICT',\n  },\n};\n","export default {\n    devHost: 'http://akvaratododb.herokuapp.com/',\n    // devHost: 'http://localhost:5000/',\n    apiHost: 'https://akvaratododb.herokuapp.com/',\n    separatorString: '..................',\n    listsAddon: 'lists',\n    settingsAddon: 'settings',\n    maxTaskLength: 50,\n    loadingStringLength: 40,\n    user: {\n        id: 1,\n        name: 'akvara',\n        settings: {\n            openListIfExists: 'Current',\n            addNewAt: 4,\n            displayListLength: 15,\n            displayDoneLength: 3,\n            displayLast: 2\n        }\n    },\n    settingsConfig: {\n        addNewAt: { explain: 'Add new item at position', handler: 'numeric', default: 5, min: 1, max: 10 },\n        displayListLength: {\n            explain: 'Display number of tasks at once',\n            default: 17,\n            handler: 'numeric',\n            min: 1,\n            max: 50\n        },\n        displayLast: { explain: 'Display number of tasks at bottom', default: 3, handler: 'numeric', min: 1, max: 50 },\n        displayDoneLength: { explain: 'Display number of done tasks', default: 3, handler: 'numeric', min: 1, max: 50 },\n        openListIfExists: { explain: 'Load this list on start', handler: 'selector', field: '' },\n    },\n    statusNode: document.getElementById('status'),\n    userNode: document.getElementById('user'),\n    appNode: document.getElementById('app'),\n    footerNode: document.getElementById('footer'),\n    clickSound: 'https://www.soundjay.com/button/button-20.mp3',\n    version: '1228-13'\n};\n","import _ from 'underscore';\nimport CONFIG from '../config.js';\n\nexport const sortArrOfObjectsByParam = (arrToSort, sortBy, sortDesc) => {\n  if (!sortDesc) {\n    return arrToSort.sort(function(a, b) {\n      return a[ sortBy ] < b[ sortBy ] ? -1 : 1;\n    });\n  } else {\n    return arrToSort.sort(function(a, b) {\n      return a[ sortBy ] > b[ sortBy ] ? -1 : 1;\n    });\n  }\n};\n\nexport const moveToAnother = (fromA, toB, i, toTop) => {\n  let trans = fromA[ i ];\n  fromA.splice(i, 1);\n  if (toTop) {\n    toB = _.unique([ trans ].concat(toB));\n  } else {\n    toB = _.unique(toB.concat([ trans ]));\n  }\n\n  return { A: fromA, B: toB };\n};\n\nexport const moveToEnd = (items, i) => {\n  let trans = items[ i ];\n  items.splice(i, 1);\n\n  return items.concat([ trans ]);\n};\n\nexport const moveToTop = (items, i) => {\n  let trans = items[ i ];\n  items.splice(i, 1);\n\n  return [ trans ].concat(items);\n};\n\nexport const moveFromTo = (items, fromPos, toPos) => {\n  let trans = items[ fromPos ];\n  items.splice(fromPos, 1);\n  items.splice(toPos, 0, trans);\n\n  return items;\n};\n\nexport const removeItem = (items, i) => {\n  items.splice(i, 1);\n\n  return items;\n};\n\nexport const concatTwoJSONs = (json1, json2) => {\n  return JSON.stringify(_.unique(JSON.parse(json1).concat(JSON.parse(json2))));\n};\n\nexport const prependToJSON = (strng, jsn) => {\n  return JSON.stringify(_.unique([ strng ].concat(JSON.parse(jsn))));\n};\n\nexport const removeTask = (strng, jsn) => {\n  return JSON.stringify(JSON.parse(jsn).filter((item) => item !== strng));\n};\n\nexport const overLength = (which, items) => {\n  return items.length > CONFIG.user.settings[ which ];\n};\n\nexport const grabDate = (someDateStr) => {\n  return toLocalTime(someDateStr).substr(0, 10);\n};\n\nexport const grabTime = (someDateStr) => {\n  return toLocalTime(someDateStr).substr(11, 5);\n};\n\nexport const toLocalTime = (utcDateStr) => {\n  return new Date(new Date(utcDateStr).toString().replace(/GMT.*/g, '') + ' UTC').toISOString();\n};\n","import types from '../actions/types';\nimport BaseReducer from './base-reducer';\nimport CONST from '../../utils/constants.js';\nimport * as Utils from '../../utils/utils';\n\nclass AppReducer extends BaseReducer {\n  constructor() {\n    super();\n    this.initialState = {};\n    this.ACTION_HANDLERS = {\n      [types.LIST_OF_LISTS.REQUEST]: this.listOfListsRequest,\n      [types.LIST_OF_LISTS.SUCCESS]: this.listOfListsFetched,\n      [types.REFRESH_LIST.SUCCESS]: this.listOfListsRefreshed,\n\n      [types.REMOVE_LIST.REQUEST]: this.removeListRequest,\n      [types.UPDATE_LIST.SUCCESS]: this.listSaved,\n\n      [types.GET_A_LIST.REQUEST]: this.alistRequest,\n      [types.GET_A_LIST.SUCCESS]: this.aListFetched,\n\n      [types.CHECK_AND_SAVE]: this.checkAList,\n      [types.MOVE_CHOOSE]: this.moveTo,\n      [types.MOVE_TO]: this.prependRequest,\n      [types.IMPORT_LIST]: this.importListRequest,\n      [types.EXPORT_LIST]: this.exportListRequest,\n      [types.ADD_OR_OPEN_LIST]: this.addAListRequest,\n\n      [types.PLAN_WEEK]: this.planWeek,\n\n      [types.ERROR]: this.error,\n      [types.DATA_CONFLICT]: this.dataConflict,\n    };\n  }\n\n  listOfListsRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Loading lists ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  alistRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Loading list ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  planWeek(state) {\n    return {\n      ...state,\n      status_msg: 'Planing a week ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  removeListRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Removing list ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  importListRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Adding a list on top ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  exportListRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Exporting to a list ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  prependRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Adding on top ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  addAListRequest(state) {\n    return {\n      ...state,\n      status_msg: 'Checking lists ...',\n      mode: CONST.mode.MODE_LOADING,\n    };\n  }\n\n  checkAList(state) {\n    return {\n      ...state,\n      status_msg: 'Checking a list ...',\n    };\n  }\n\n  listSaved(state) {\n    return {\n      ...state,\n      status_msg: 'List saved',\n    };\n  }\n\n  listOfListsRefreshed(state, action) {\n    return {\n      ...state,\n      lists: Utils.sortArrOfObjectsByParam(action.payload, 'updatedAt', true),\n    };\n  }\n\n  listOfListsFetched(state, action) {\n    return {\n      ...state,\n      status_msg: 'Lists loaded',\n      mode: CONST.mode.MODE_LIST_OF_LISTS,\n      lists: Utils.sortArrOfObjectsByParam(action.payload, 'updatedAt', true),\n    };\n  }\n\n  aListFetched(state, action) {\n    if (!action.payload) {\n      return state;\n    }\n    return {\n      ...state,\n      status_msg: action.payload.name + ' loaded',\n      mode: CONST.mode.MODE_A_LIST,\n      a_list: action.payload,\n    };\n  }\n\n  moveTo(state, action) {\n    return {\n      ...state,\n      status_msg: 'Move task to ... ',\n      mode: CONST.mode.MODE_MOVE,\n      from_list: action.payload.data.from_list,\n      task: action.payload.data.task,\n    };\n  }\n\n  error(state) {\n    return {\n      ...state,\n      mode: CONST.mode.ERROR,\n    };\n  }\n\n  dataConflict(state, action) {\n    let date = new Date(action.payload).toLocaleTimeString('lt-LT');\n    return {\n      ...state,\n      status_msg: date,\n      mode: CONST.mode.DATA_CONFLICT,\n    };\n  }\n}\n\nexport default new AppReducer().handleActions;\n","import { combineReducers } from 'redux';\nimport AppReducer from './list-reducer';\n\nexport default combineReducers({\n  app: AppReducer,\n});\n","import fetch from 'isomorphic-fetch';\nimport { Promise } from 'es6-promise';\n// import {getCookie} from '../utils/cookies';\n// import {getToken} from './local-storage';\n\nfunction addHeaders(options) {\n  let headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n\n  // const csrftoken = getCookie('csrftoken');\n  // if (csrftoken) {\n  // headers['X-CSRFToken'] = csrftoken;\n  // }\n\n  // const token = getToken();\n  // if (token) {\n  //     headers['Authorization'] = `Token ${token}`;\n  // }\n\n  return {\n    ...options,\n    headers: headers,\n    credentials: 'same-origin',\n    mode: 'cors',\n  };\n}\n\nfunction callApi(url, options) {\n  let opt = addHeaders(options);\n  return fetch(url, opt).then((response) => {\n    const contentType = response.headers.get('content-type');\n    const isJson = contentType && contentType.indexOf('application/json') >= 0;\n\n    if (response.status >= 200 && response.status < 300) {\n      return isJson ? Promise.resolve(response.json()) : Promise.resolve(response.text());\n    }\n\n    const error = new Error(response.statusText || response.status);\n    if (isJson) {\n      return response.json().then((json) => {\n        error.response = json;\n        error.status = response.status;\n        throw error;\n      });\n    }\n\n    error.response = {\n      message: 'msg_error_unexpected_error',\n      status: response.status,\n    };\n    throw error;\n  });\n}\n\nexport function callGet(url) {\n  return callApi(url, {\n    method: 'GET',\n  });\n}\n\nexport function callPost(url, data) {\n  return callApi(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n}\n\nexport function callUpdate(url, data) {\n  return callApi(url, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n  });\n}\n\nexport function callDelete(url) {\n  return callApi(url, {\n    method: 'DELETE',\n  });\n}\n","import { call, put } from 'redux-saga/effects';\nimport { callDelete, callGet, callPost, callUpdate } from '../../utils/api';\n\nexport function* fetchItemSaga(url, actionType) {\n  try {\n    const result = yield call(callGet, url);\n    yield put({ type: actionType.SUCCESS, payload: result });\n  } catch (e) {\n    yield put({ type: actionType.FAILURE, payload: e });\n  }\n}\n\nexport function* removeItemSaga(url, data, actionType) {\n  try {\n    yield call(callDelete, url);\n    yield put({ type: actionType.SUCCESS, payload: data });\n  } catch (e) {\n    yield put({ type: actionType.FAILURE, payload: e });\n  }\n}\n\nexport function* updateItemSaga(url, data, actionType) {\n  try {\n    yield call(callUpdate, url, data);\n    yield put({ type: actionType.SUCCESS, payload: data });\n  } catch (e) {\n    yield put({ type: actionType.FAILURE, payload: e });\n  }\n}\n\nexport function* createItemSaga(url, data, actionType) {\n  try {\n    const result = yield call(callPost, url, data);\n    let payload = { data: result._id };\n    yield put({ type: actionType.SUCCESS, payload: payload });\n  } catch (e) {\n    yield put({ type: actionType.FAILURE, payload: e });\n  }\n}\n","import CONFIG from '../config.js';\n\nexport const getHostUrl = () =>\n  process.env.NODE_ENV === 'development' ? CONFIG.devHost : CONFIG.apiHost;\n\nexport const getBaseUrl = () => getHostUrl() + CONFIG.user.id + '/';\n\nexport const getListsUrl = () => getBaseUrl() + CONFIG.listsAddon;\n\nexport const getAListUrl = (listId) => getListsUrl() + '/' + listId;\n\n// export const getUserSettingsUrl = () => {\n//   return getBaseUrl() + CONFIG.default.settingsAddon;\n// };\n//\n","import CONFIG from '../config.js';\n\nexport const BaseTaskEntity = () => {\n  return {\n    userId: CONFIG.user.id,\n    lastAction: new Date().toISOString(),\n  };\n};\n\nexport const NewTaskEntity = (name) => {\n  let task = BaseTaskEntity();\n  task.name = name;\n  task.tasks = '[]';\n  task.done = '[]';\n\n  return task;\n};\n","export const DAYS = ['Sekmadienį', 'Pirmadienį', 'Antradienį', 'Trečiadienį', 'Ketvirtadienį', 'Penktadienį', 'Šeštadienį'];\nexport const MONTHS = [\n  'sausio',\n  'vasario',\n  'kovo',\n  'balandžio',\n  'gegužės',\n  'birželio',\n  'liepos',\n  'rugpjūčio',\n  'rugsėjo',\n  'spalio',\n  'lapkričio',\n  'gruodžio',\n];\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\n\nimport types from '../actions/types';\nimport { createItemSaga, fetchItemSaga, removeItemSaga, updateItemSaga } from './common-sagas';\nimport { callDelete, callGet, callPost, callUpdate } from '../../utils/api';\nimport * as UrlUtils from '../../utils/urlUtils';\nimport * as Utils from '../../utils/utils.js';\nimport { NewTaskEntity } from '../../utils/entity';\nimport { DAYS, MONTHS } from '../../locale/lt';\n\nfunction* listOfListsRequest() {\n  yield fetchItemSaga(UrlUtils.getListsUrl(), types.LIST_OF_LISTS);\n}\n\nfunction* checkAndSave(action) {\n  const new_data = action.payload.data;\n  const listId = new_data.listId;\n  const originalList = yield call(callGet, UrlUtils.getAListUrl(listId));\n  if (originalList.lastAction !== new_data.previousAction) {\n    if (new_data.taskToAdd) {\n      let payload = {\n        data: {\n          listId: listId,\n          task: new_data.taskToAdd,\n        },\n      };\n      return yield put({ type: types.PREPEND, payload });\n    }\n    return yield put({ type: types.DATA_CONFLICT, payload: originalList.lastAction });\n  }\n  yield updateItemSaga(UrlUtils.getAListUrl(listId), new_data.listData, types.UPDATE_LIST);\n}\n\nfunction* getAListRequest(action) {\n  yield fetchItemSaga(UrlUtils.getAListUrl(action.payload.data), types.GET_A_LIST);\n}\n\nfunction* getAListSuccess(action) {\n  if (!action.payload) {\n    yield fetchItemSaga(UrlUtils.getListsUrl(), types.LIST_OF_LISTS);\n  }\n}\n\nfunction* removeListRequest(action) {\n  yield removeItemSaga(UrlUtils.getAListUrl(action.payload.data), action.payload.data, types.REMOVE_LIST);\n}\n\n/*\n * params: list name as action.payload.data.listName\n * returns listId\n */\nfunction* findOrCreateListByName(action) {\n  try {\n    const url = UrlUtils.getListsUrl();\n    const listName = action.payload.data.listName;\n    const listOfLists = yield call(callGet, url);\n    const filtered = listOfLists.filter((e) => e.name === listName);\n\n    if (filtered.length) {\n      return filtered[0]._id;\n    }\n    const result = yield call(callPost, url, NewTaskEntity(listName));\n    yield fetchItemSaga(UrlUtils.getListsUrl(), types.REFRESH_LIST);\n    return result._id;\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nfunction* addOrOpenListsSaga(action) {\n  try {\n    const listOfLists = yield call(callGet, UrlUtils.getListsUrl());\n    const listName = action.payload.data;\n    const filtered = listOfLists.filter((e) => e.name === listName);\n\n    if (filtered.length) {\n      return yield fetchItemSaga(UrlUtils.getAListUrl(filtered[0]._id), types.GET_A_LIST);\n    }\n\n    return yield createItemSaga(UrlUtils.getListsUrl(), NewTaskEntity(listName), types.NEW_LIST);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nfunction* planWeek() {\n  try {\n    const listOfLists = yield call(callGet, UrlUtils.getListsUrl());\n    const now = new Date();\n    let shift_date = new Date();\n\n    for (let shift = 6; shift >= 0; shift--) {\n      shift_date = new Date(now.getTime() + 1000 * 60 * 60 * 24 * shift);\n      const listName = `${DAYS[shift_date.getDay()]}, ${MONTHS[shift_date.getMonth()]} ${shift_date.getDate()} d.`;\n      const filtered = listOfLists.filter((e) => e.name === listName);\n      if (!filtered.length) {\n        yield call(callPost, UrlUtils.getListsUrl(), NewTaskEntity(listName));\n      }\n    }\n    return yield fetchItemSaga(UrlUtils.getListsUrl(), types.LIST_OF_LISTS);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nfunction* generalFailure(e) {\n  yield put({ type: types.ERROR, payload: e });\n}\n\nfunction* importListSaga(action) {\n  try {\n    const urlFirst = UrlUtils.getAListUrl(action.payload.data.firstListId);\n    const urlSecond = UrlUtils.getAListUrl(action.payload.data.secondListId);\n    const firstList = yield call(callGet, urlFirst);\n    const second = yield call(callGet, urlSecond);\n    let data = {\n      lastAction: new Date().toISOString(),\n      tasks: Utils.concatTwoJSONs(firstList.tasks, second.tasks),\n    };\n    yield call(callUpdate, urlSecond, data);\n    return yield fetchItemSaga(urlSecond, types.GET_A_LIST);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nfunction* exportListSaga(action) {\n  try {\n    const urlThisList = UrlUtils.getAListUrl(action.payload.data.listId);\n    const urlToThatList = UrlUtils.getAListUrl(action.payload.data.toListId);\n    const thisList = yield call(callGet, urlThisList);\n    const toThatList = yield call(callGet, urlToThatList);\n    let data = {\n      lastAction: new Date().toISOString(),\n      tasks: Utils.concatTwoJSONs(thisList.tasks, toThatList.tasks),\n    };\n    yield call(callUpdate, urlToThatList, data);\n    yield call(callDelete, urlThisList);\n    return yield fetchItemSaga(urlToThatList, types.GET_A_LIST);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nfunction* moveTaskToAnotherListSaga(action) {\n  try {\n    yield removeTaskFromListSaga(action);\n    yield prependToAListSaga(action);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nfunction* copyOrMoveToNewListSaga(action) {\n  try {\n    action.payload.data.listId = yield findOrCreateListByName(action);\n\n    if (action.payload.data.move) {\n      yield removeTaskFromListSaga(action);\n    }\n    yield prependToAListSaga(action);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\n/* Expects: {listId, task} */\nfunction* prependToAListSaga(action) {\n  try {\n    const new_data = action.payload.data;\n    const url = UrlUtils.getAListUrl(new_data.listId);\n\n    const originalList = yield call(callGet, url);\n\n    const data = {\n      lastAction: new Date().toISOString(),\n      tasks: Utils.prependToJSON(new_data.task, originalList.tasks),\n    };\n    yield call(callUpdate, url, data);\n    return yield fetchItemSaga(url, types.GET_A_LIST);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\n/* Expects: {fromListId, task} */\nfunction* removeTaskFromListSaga(action) {\n  try {\n    const new_data = action.payload.data;\n    const url = UrlUtils.getAListUrl(new_data.fromListId);\n\n    const originalList = yield call(callGet, url);\n\n    const data = {\n      lastAction: new Date().toISOString(),\n      tasks: Utils.removeTask(new_data.task, originalList.tasks),\n    };\n    yield call(callUpdate, url, data);\n  } catch (e) {\n    yield generalFailure(e);\n  }\n}\n\nexport default function* listSagas() {\n  yield all([\n    takeEvery(types.LIST_OF_LISTS.REQUEST, listOfListsRequest),\n    takeEvery(types.LIST_OF_LISTS.FAILURE, generalFailure),\n\n    takeEvery(types.GET_A_LIST.REQUEST, getAListRequest),\n    takeEvery(types.GET_A_LIST.SUCCESS, getAListSuccess),\n    takeEvery(types.GET_A_LIST.FAILURE, generalFailure),\n\n    takeEvery(types.REMOVE_LIST.REQUEST, removeListRequest),\n    takeEvery(types.REMOVE_LIST.SUCCESS, listOfListsRequest),\n    takeEvery(types.REMOVE_LIST.FAILURE, generalFailure),\n\n    takeEvery(types.NEW_LIST.SUCCESS, getAListRequest),\n    takeEvery(types.NEW_LIST.FAILURE, generalFailure),\n\n    takeEvery(types.UPDATE_LIST.FAILURE, generalFailure),\n\n    takeEvery(types.ADD_OR_OPEN_LIST, addOrOpenListsSaga),\n    takeEvery(types.CHECK_AND_SAVE, checkAndSave),\n    takeEvery(types.PREPEND, prependToAListSaga),\n    takeEvery(types.MOVE_TO, moveTaskToAnotherListSaga),\n    takeEvery(types.COPY_OR_MOVE, copyOrMoveToNewListSaga),\n    takeEvery(types.IMPORT_LIST, importListSaga),\n    takeEvery(types.EXPORT_LIST, exportListSaga),\n    takeEvery(types.PLAN_WEEK, planWeek),\n  ]);\n}\n","import appSagas from './app-sagas';\nimport { all } from 'redux-saga/effects';\n\nexport default function* RootSaga() {\n  yield all([appSagas()]);\n}\n","import combineReducers from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport RootSaga from './sagas';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport function configureStore(middlewares) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware, thunk, ...middlewares];\n  // middleware.push(authMiddleware);\n  // middleware.push(createLogger());\n\n  return {\n    ...createStore(combineReducers, composeEnhancers(applyMiddleware(...middleware))),\n    runSaga: sagaMiddleware.run,\n  };\n}\n\nexport function buildStore(middlewares) {\n  const store = configureStore(middlewares);\n  store.runSaga(RootSaga);\n  return store;\n}\n","import React from 'react';\n\nimport './style/spinner.css';\n\nexport const Spinner = () => <div className=\"spinner\">Loading...</div>;\n","import types from './types';\n\nexport function getListOfLists(data, resolve, reject) {\n  return {\n    type: types.LIST_OF_LISTS.REQUEST,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function getAList(data, resolve, reject) {\n  return {\n    type: types.GET_A_LIST.REQUEST,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function removeList(data, resolve, reject) {\n  return {\n    type: types.REMOVE_LIST.REQUEST,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function addOrOpenAList(data, resolve, reject) {\n  return {\n    type: types.ADD_OR_OPEN_LIST,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function checkAndSave(data, resolve, reject) {\n  return {\n    type: types.CHECK_AND_SAVE,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function prependToAList(data, resolve, reject) {\n  return {\n    type: types.PREPEND,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function importList(data, resolve, reject) {\n  return {\n    type: types.IMPORT_LIST,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function exportList(data, resolve, reject) {\n  return {\n    type: types.EXPORT_LIST,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function moveOutside(data, resolve, reject) {\n  return {\n    type: types.MOVE_CHOOSE,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function moveToList(data, resolve, reject) {\n  return {\n    type: types.MOVE_TO,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function copyOrMoveToNew(data, resolve, reject) {\n  return {\n    type: types.COPY_OR_MOVE,\n    payload: { data, resolve, reject },\n  };\n}\n\nexport function planWeek() {\n  return {\n    type: types.PLAN_WEEK,\n  };\n}\n\nexport function error(data, resolve, reject) {\n  return {\n    type: types.ERROR,\n    payload: { data, resolve, reject },\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Utils from '../utils/utils.js';\nimport CONFIG from '../config.js';\n\nclass ListOfLists extends Component {\n  static propTypes = {\n    hotKeys: PropTypes.array,\n    lists: PropTypes.array,\n    openList: PropTypes.func.isRequired,\n    removeList: PropTypes.func,\n  };\n\n  hotKeyedListName = (listName) => {\n    if (!this.props.hotKeys) return listName;\n    let corresponding = this.props.hotKeys.filter((elem) => elem.listName === listName);\n    if (!corresponding.length) return listName;\n\n    return this.strongify(listName, corresponding[0].key);\n  };\n\n  /* underline first of given letters */\n  strongify = (str, letter) => {\n    let n = str.toLowerCase().indexOf(letter);\n    if (n === -1) return str;\n\n    return (\n      <span>\n        {str.substring(0, n)}\n        <u>{str.substring(n, n + 1)}</u>\n        {str.substring(n + 1, str.length)}\n      </span>\n    );\n  };\n\n  contractedListItemHeader = (list, i) => {\n    let sign = 'glyphicon-minus';\n    if (list.isContracted) sign = 'glyphicon-plus';\n    return (\n      <tr key={'tr' + i}>\n        <td colSpan={2} onClick={this.props.toggleContracted.bind(this, list.contractedTitle, !list.isContracted)}>\n          <span className={'glyphicon list-item list-item-glyph glyphicon ' + sign} aria-hidden=\"true\" />\n          {list.contractedTitle}\n        </td>\n        <td className=\"right-align\">\n          (<strong>{list.list.length}</strong>)\n        </td>\n      </tr>\n    );\n  };\n\n  contractedListItems = (list, i) => {\n    if (list.isContracted) return null;\n    return list.list.map(this.displayIndentedListRow);\n  };\n\n  contractedList = (list, i) => {\n    return [this.contractedListItemHeader(list, i), this.contractedListItems(list, i)];\n  };\n\n  displayIndentedListRow = (list, i) => {\n    let item = this.prepareListForDisplaying(list);\n    item.indent = true;\n    return this.displayListRow(item, i);\n  };\n\n  displayListRow = (list, i) => (\n    <tr key={'tr' + i}>\n      <td className={list.itemClass} onClick={list.action}>\n        {list.indent && (\n          <span className={'glyphicon list-item list-item-glyph'} aria-hidden=\"true\">\n            {' '}\n          </span>\n        )}\n        <span className={'glyphicon list-item list-item-glyph glyphicon-folder-open'} aria-hidden=\"true\" />\n        {list.name}\n      </td>\n      <td className=\"actions\">\n        {list.deletable && (\n          <span\n            className=\"glyphicon glyphicon-trash action-button\"\n            aria-hidden=\"true\"\n            onClick={this.props.removeList.bind(this, list._id)}\n          />\n        )}\n      </td>\n      <td className=\"right-align\">\n        (<strong>{list.noOfTasks}</strong>) {list.updatedDateOrTime}\n      </td>\n    </tr>\n  );\n\n  prepareListForDisplaying = (list) => {\n    let item = {\n      _id: list._id,\n      tasks: list.tasks,\n      noOfTasks: list.tasks ? JSON.parse(list.tasks).length : 0,\n      name: this.hotKeyedListName(list.name),\n      itemClass: 'list-item',\n      action: this.props.openList.bind(this, list._id, list.name),\n      deletable: list.tasks ? list.tasks === '[]' && !list.immutable : true,\n      updatedDateOrTime:\n        Utils.grabDate(new Date().toISOString()) === Utils.grabDate(list.updatedAt)\n          ? Utils.grabTime(list.updatedAt)\n          : Utils.grabDate(list.updatedAt),\n    };\n\n    if (list.immutable) {\n      item.itemClass += ' list-item-immutable';\n    }\n\n    if (list.name === CONFIG.user.settings.openListIfExists) {\n      item.itemClass += ' list-item-current';\n    }\n\n    return item;\n  };\n\n  displayList = (list, i) => {\n    if (list.isList) return this.contractedList(list, i);\n    let item = this.prepareListForDisplaying(list);\n\n    return this.displayListRow(item, i);\n  };\n\n  render() {\n    return (\n      <table className=\"table table-hover\">\n        <tbody>{this.props.lists.map(this.displayList)}</tbody>\n      </table>\n    );\n  }\n}\n\nexport default ListOfLists;\n","export const makeContractableList = (listOfLists) => {\n  let contractedList = [];\n\n  listOfLists.map((list) => {\n    let dashPos = list.name.indexOf(' - ');\n    if (dashPos > -1) {\n      let contractedTitle = list.name.substring(0, dashPos);\n      if (!contractedList[contractedTitle]) {\n        contractedList[contractedTitle] = { used: false, list: [] };\n      }\n      contractedList[contractedTitle].list.push(list);\n    }\n    return null;\n  });\n\n  let displayList = [];\n\n  listOfLists.map((list) => {\n    let dashPos = list.name.indexOf(' - ');\n    if (dashPos > -1) {\n      let contractedTitle = list.name.substring(0, dashPos);\n      if (contractedList[contractedTitle].list.length > 1) {\n        if (!contractedList[contractedTitle].used) {\n          contractedList[contractedTitle].used = true;\n          displayList.push({\n            isList: true,\n            isContracted: true,\n            contractedTitle: contractedTitle,\n            list: contractedList[contractedTitle].list,\n          });\n        }\n      } else {\n        displayList.push(list);\n      }\n    } else {\n      displayList.push(list);\n    }\n    return null;\n  });\n  return displayList;\n};\n","import $ from 'jquery';\n\nexport const registerHotKeys = (checkKeyPressed) => {\n  // console.log(\"hotkeys ENabled\");\n  $(document).on('keypress', (e) => checkKeyPressed(e));\n};\n\nexport const disableHotKeys = () => {\n  // console.log(\"hotkeys disabled\");\n  $(document).off('keypress');\n};\n\nexport const playSound = () => {\n  let sound = document.getElementById('clickSound');\n  sound.play();\n};\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ListOfLists from './ListOfLists';\nimport { addOrOpenAList, getAList, getListOfLists, planWeek, removeList } from '../store/actions/list-actions';\nimport { makeContractableList } from '../utils/listUtils';\nimport { playSound, disableHotKeys, registerHotKeys } from '../utils/hotkeys';\n\nclass ListsApp extends Component {\n    static propTypes = {\n        lists: PropTypes.array.isRequired,\n        actions: PropTypes.shape({\n            getAList: PropTypes.func.isRequired,\n            getListOfLists: PropTypes.func.isRequired,\n            addOrOpenAList: PropTypes.func.isRequired,\n            removeList: PropTypes.func.isRequired,\n            planWeek: PropTypes.func.isRequired,\n        }).isRequired\n    };\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            lists: makeContractableList(this.props.lists.filter(list => !list.immutable)),\n            immutableLists: this.props.lists.filter(list => list.immutable),\n            listName: '',\n        };\n\n        this.hotKeys = [ // reserved hotkeys\n            { key: 'a' },\n            { key: 'r' },\n        ];\n    }\n\n    componentWillUnmount() {\n        disableHotKeys();\n    }\n\n    componentDidMount() {\n        document.title = 'ToDo lists';\n        registerHotKeys(this.checkKeyPressed.bind(this));\n    }\n\n    checkKeyPressed = (e) => {\n        let pressed = String.fromCharCode(e.which);\n        if (pressed === 'a') {\n            playSound();\n            e.preventDefault();\n            this.listNameInput.focus();\n            return;\n        }\n        if (pressed === 'r') {\n            playSound();\n            e.preventDefault();\n            this.reload();\n            return;\n        }\n        this.hotKeys.forEach(function (k) {\n                if (k.key === pressed) {\n                    playSound();\n                    this.openAList(k.listId);\n                }\n            }.bind(this)\n        );\n    };\n\n    addHotKeys = () => {\n        this.state.lists.forEach((list) => {\n            if (!list.isList) {\n                let newKey = this.findFreeKey(list.name);\n                if (newKey) this.hotKeys.push({ key: newKey, listId: list._id, listName: list.name });\n            }\n        });\n    };\n\n    keyIsNotOccupied = (key) => !this.hotKeys.filter((elem) => elem.key === key).length;\n\n    findFreeKey = (str) => {\n        for (let i = 0, len = str.length; i < len; i++) {\n            let pretender = str[ i ].toLowerCase();\n            if ('abcdefghijklmnopqrstuvwxyz'.indexOf(pretender) !== -1 && this.keyIsNotOccupied(pretender)) return pretender;\n        }\n        return null;\n    };\n\n    /* Go to list of lists */\n    reload = () => {\n        this.props.actions.getListOfLists();\n    };\n\n    onNameChange = (e) => {\n        this.setState({ listName: e.target.value });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.actions.addOrOpenAList(this.state.listName);\n    };\n\n    openAList = (listId) => {\n        this.props.actions.getAList(listId);\n    };\n\n    toggleContracted = (listTitle, beContracted) => {\n        let newList = this.state.lists.map(list => {\n            if (list.isList && list.contractedTitle === listTitle) {\n                return {\n                    ...list,\n                    isContracted: beContracted\n                };\n            } else {\n                return list;\n            }\n        });\n        this.setState({ lists: newList });\n    };\n\n    removeList = (listId) => {\n        this.props.actions.removeList(listId);\n    };\n\n    handleKeyDownAtListInput = (e) => {\n        if (e.keyCode === 27) {\n            this.listNameInput.blur();\n            this.setState({\n                listName: ''\n            });\n        }\n    };\n\n    /* The Renderer */\n    render() {\n        this.addHotKeys();\n        return (\n            <div>\n                <h1>Lists</h1>\n                <ListOfLists\n                    lists={this.state.lists}\n                    openList={this.openAList}\n                    toggleContracted={this.toggleContracted}\n                    removeList={this.removeList}\n                    hotKeys={this.hotKeys}\n                />\n                <h3>Protected</h3>\n                <ListOfLists\n                    lists={this.state.immutableLists}\n                    openList={this.openAList}\n                />\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        className=\"list-input\"\n                        ref={(input) => {\n                            this.listNameInput = input;\n                        }}\n                        value={this.state.listName}\n                        onFocus={disableHotKeys.bind(this)}\n                        onBlur={registerHotKeys.bind(this, this.checkKeyPressed)}\n                        onKeyDown={this.handleKeyDownAtListInput}\n                        onChange={this.onNameChange}\n                    />\n                    <button disabled={!this.state.listName.trim()}>Create new list</button>\n                </form>\n                <hr/>\n                <button onClick={this.props.actions.planWeek}>Plan week</button>\n                <button onClick={this.reload}>\n                    <span className={'glyphicon glyphicon-refresh'}\n                          aria-hidden=\"true\">\n                    </span> <u>R</u>eload\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    (dispatch) => ({\n        actions: bindActionCreators({\n            getAList: getAList,\n            getListOfLists: getListOfLists,\n            addOrOpenAList: addOrOpenAList,\n            removeList: removeList,\n            planWeek: planWeek\n        }, dispatch),\n    })\n)(ListsApp);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CONFIG from '../config.js';\nimport * as Utils from '../utils/utils.js';\n\nclass TaskList extends Component {\n  static propTypes = {\n    items: PropTypes.array.isRequired,\n    done: PropTypes.func.isRequired,\n    delete: PropTypes.func.isRequired,\n    toTop: PropTypes.func.isRequired,\n    move: PropTypes.func.isRequired,\n    procrastinate: PropTypes.func.isRequired,\n    postpone: PropTypes.func.isRequired,\n    openListByName: PropTypes.func.isRequired,\n    highlightIndex: PropTypes.number,\n  };\n\n  hightlightOnDemand(element, index) {\n    if (this.props.highlightIndex === index) return <strong>{element}</strong>;\n    else return <span>{element}</span>;\n  }\n\n  processTaskText(task) {\n    if (task === null) task = 'null';\n    let taskTruncated = task.substring(0, CONFIG.maxTaskLength),\n      taskAsDisplayed = taskTruncated;\n\n    /* If task is a link: */\n    if (task.substring(0, 4) === 'http') {\n      taskTruncated = taskTruncated.substr(taskTruncated.indexOf('://') + 3);\n      if (taskTruncated[taskTruncated.length - 1] === '/') {\n        taskTruncated = taskTruncated.substr(0, taskTruncated.length - 1);\n      }\n      taskAsDisplayed = (\n        <a href={task} target=\"_blank\" rel=\"noopener noreferrer\">\n          {taskTruncated}\n        </a>\n      );\n      return taskAsDisplayed;\n    }\n\n    /* if task is a folder: */\n    if (task.substring(0, 1) === '[') {\n      taskAsDisplayed = (\n        <span>\n          <span\n            className={'glyphicon glyphicon-folder-open list-first-item'}\n            aria-hidden=\"true\"\n            onClick={this.props.openListByName.bind(this, task.substring(1))}\n          />\n          {taskTruncated.substring(1)}\n        </span>\n      );\n    }\n\n    return taskAsDisplayed;\n  }\n\n  /* Display one line */\n  displayTask(task, i, omitted) {\n    if (task === CONFIG.separatorString) {\n      return (\n        <tr key={'tr' + i}>\n          <td>{CONFIG.separatorString}</td>\n          <td className=\"right-align\">{CONFIG.separatorString}</td>\n        </tr>\n      );\n    }\n\n    let itemIndex = i;\n    if (itemIndex >= CONFIG.user.settings.displayListLength - CONFIG.user.settings.displayLast) {\n      itemIndex = i + omitted;\n    }\n\n    let taskAsDisplayed = this.processTaskText(task);\n\n    if (this.props.immutable) {\n      return (\n        <tr key={'tr' + i}>\n          <td>{taskAsDisplayed}</td>\n        </tr>\n      );\n    } else {\n      return (\n        <tr key={'tr' + i}>\n          <td>\n            <span\n              className=\"glyphicon glyphicon-unchecked action-button\"\n              aria-hidden=\"true\"\n              onClick={this.props.done.bind(this, itemIndex)}\n            />\n            <span className=\"list-item task\">{this.hightlightOnDemand(taskAsDisplayed, itemIndex)}</span>\n          </td>\n          <td className=\"actions\">\n            <span\n              className=\"glyphicon glyphicon-trash delete-button\"\n              aria-hidden=\"true\"\n              onClick={this.props.delete.bind(this, itemIndex)}\n            />\n            <span className=\"list-item\"> </span>\n            <span\n              className=\"glyphicon glyphicon-arrow-down action-button\"\n              aria-hidden=\"true\"\n              onClick={this.props.procrastinate.bind(this, itemIndex)}\n            />\n            <span\n              className=\"glyphicon glyphicon-arrow-up action-button\"\n              aria-hidden=\"true\"\n              onClick={this.props.toTop.bind(this, itemIndex)}\n            />\n            <span\n              className=\"glyphicon glyphicon-random action-button\"\n              aria-hidden=\"true\"\n              onClick={this.props.move.bind(this, task)}\n            />\n            <span\n              className=\"glyphicon glyphicon-thumbs-down action-button\"\n              aria-hidden=\"true\"\n              onClick={this.props.postpone.bind(this, itemIndex)}\n            />\n          </td>\n        </tr>\n      );\n    }\n  }\n\n  render() {\n    let taskListDisplayed = this.props.items,\n      shouldOmit = 0;\n\n    if (!this.props.expand && Utils.overLength('displayListLength', this.props.items)) {\n      shouldOmit = this.props.items.length - CONFIG.user.settings.displayListLength;\n      taskListDisplayed = this.props.items\n        .slice(0, CONFIG.user.settings.displayListLength - CONFIG.user.settings.displayLast - 1)\n        .concat([CONFIG.separatorString])\n        .concat(this.props.items.slice(-CONFIG.user.settings.displayLast));\n    }\n\n    return (\n      <table className=\"table table-condensed table-hover\">\n        <tbody>{taskListDisplayed.map((task, index) => this.displayTask(task, index, shouldOmit))}</tbody>\n      </table>\n    );\n  }\n}\n\nexport default TaskList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CONFIG from '../config.js';\nimport * as Utils from '../utils/utils.js';\n\nclass TasksDoneList extends Component {\n  static propTypes = {\n    items: PropTypes.array.isRequired,\n    expand: PropTypes.bool,\n  };\n\n  /* Display one done task */\n  displayTask = (task, i) => {\n    if (!this.props.expand && i < this.props.items.length - CONFIG.user.settings.displayDoneLength) return null;\n    return (\n      <tr key={'tr' + i}>\n        <td>\n          <span\n            className=\"glyphicon glyphicon-ok action-button\"\n            aria-hidden=\"true\"\n            onClick={this.props.undone.bind(this, i)}\n          />\n          <span className=\"list-item task done\">{task}</span>\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.expand && Utils.overLength('displayDoneLength', this.props.items) && CONFIG.separatorString}\n        <table className=\"table table-sm table-condensed table-hover\">\n          <tbody>{this.props.items.map(this.displayTask)}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TasksDoneList;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'underscore';\n\nimport TasksList from './TasksList';\nimport TasksDoneList from './TasksDoneList';\nimport CONFIG from '../config.js';\nimport {\n  addOrOpenAList,\n  checkAndSave,\n  exportList,\n  getAList,\n  getListOfLists,\n  importList,\n  moveOutside,\n} from '../store/actions/list-actions';\nimport { playSound, registerHotKeys, disableHotKeys } from '../utils/hotkeys';\nimport * as Utils from '../utils/utils.js';\n\nclass TasksApp extends Component {\n  static propTypes = {\n    list: PropTypes.object.isRequired,\n    previous_list: PropTypes.object,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      listName: props.list.name,\n      itemsToDo: JSON.parse(this.props.list.tasks),\n      itemsDone: this.props.list.done ? JSON.parse(this.props.list.done) : [],\n      prepend: props.prepend,\n      highLightIndex: props.prepend ? 0 : null,\n      lastAction: props.list.lastAction,\n      immutable: props.list.immutable,\n      task: '',\n      reloadNeeded: false,\n      expandToDo: false,\n      listNameOnEdit: false,\n      expandDone: false,\n    };\n  }\n\n  componentWillUnmount() {\n    disableHotKeys();\n  }\n\n  componentDidMount() {\n    document.title = 'ToDo lists';\n    registerHotKeys(this.checkKeyPressed.bind(this));\n  }\n\n  /* cloning State */\n  prepareClone() {\n    let clone = {};\n    clone.lastAction = new Date().toISOString();\n    clone.listId = this.props.list._id;\n    clone.previousAction = this.state.lastAction;\n\n    return clone;\n  }\n\n  serialize(object) {\n    let res = {\n      listId: object.listId,\n      previousAction: object.previousAction,\n      listData: {\n        lastAction: object.lastAction,\n        immutable: !!object.immutable,\n      },\n    };\n    if (object.name) res.listData.name = object.name;\n    if (object.itemsToDo) res.listData.tasks = JSON.stringify(object.itemsToDo);\n    if (object.itemsDone) res.listData.done = JSON.stringify(object.itemsDone);\n    if (object.taskToAdd) res.taskToAdd = object.taskToAdd;\n    return res;\n  }\n\n  /* Calculations */\n  calculatePostponePosition = (number) => Math.floor(number / 2);\n\n  /* Show full/contracted ist */\n  expand = (which) => {\n    this.setState({\n      [which]: !this.state[which],\n    });\n  };\n\n  /* Move task to Done tasks array */\n  doneTask = (i) => {\n    let dataToSave = this.prepareClone(),\n      moved = Utils.moveToAnother(this.state.itemsToDo, this.state.itemsDone, i, false);\n\n    dataToSave.itemsToDo = moved.A;\n    dataToSave.itemsDone = moved.B;\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      itemsDone: dataToSave.itemsDone,\n      highlightIndex: null,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Move task back from Done tasks array */\n  unDoneTask = (i) => {\n    let dataToSave = this.prepareClone(),\n      moved = Utils.moveToAnother(this.state.itemsDone, this.state.itemsToDo, i, true);\n\n    dataToSave.itemsToDo = moved.B;\n    dataToSave.itemsDone = moved.A;\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      itemsDone: dataToSave.itemsDone,\n      highlightIndex: 0,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Delete done tasks */\n  clearDone = () => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.itemsDone = [];\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsDone: dataToSave.itemsDone,\n      highlightIndex: null,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Remove task from list */\n  removeTask = (i) => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.itemsToDo = Utils.removeItem(this.state.itemsToDo, i);\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      highlightIndex: null,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Move task to top position */\n  toTop = (i) => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.itemsToDo = Utils.moveToTop(this.state.itemsToDo, i);\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      highlightIndex: 0,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Toggle immutable. No checking if changed */\n  mark = () => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.immutable = !this.state.immutable;\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      immutable: dataToSave.immutable,\n      highlightIndex: null,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Move task to another list */\n  moveOutside = (task) => {\n    let data = {\n      from_list: { listId: this.props.list._id, name: this.state.listName },\n      task: task,\n    };\n    this.props.actions.moveOutside(data);\n  };\n\n  /* Move task to the end of the list */\n  procrastinateTask = (i) => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.itemsToDo = Utils.moveToEnd(this.state.itemsToDo, i);\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      highlightIndex: this.state.itemsToDo.length,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Move task to the middle of the list */\n  postponeTask = (i) => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.itemsToDo = Utils.moveFromTo(\n      this.state.itemsToDo,\n      i,\n      i + this.calculatePostponePosition(this.state.itemsToDo.length),\n    );\n\n    let highlightIndex = Math.min(\n      this.state.itemsToDo.length - 1,\n      i + this.calculatePostponePosition(this.state.itemsToDo.length),\n    );\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      highlightIndex: highlightIndex,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* Change list name */\n  changeListName = (e) => {\n    let dataToSave = this.prepareClone();\n\n    dataToSave.name = e.target.value.trim();\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      listName: dataToSave.name,\n      listNameOnEdit: false,\n      highlightIndex: null,\n    });\n\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n    registerHotKeys(this.checkKeyPressed.bind(this));\n  };\n\n  /* Go to another list */\n  listChanger = (listName) => {\n    this.props.actions.addOrOpenAList(listName);\n  };\n\n  /* Reload this list*/\n  reload = () => {\n    this.props.actions.getAList(this.props.list._id);\n  };\n\n  /* Mode: List name is on edit */\n  editListName = () => {\n    this.setState({\n      listNameOnEdit: true,\n    });\n  };\n\n  checkKeyPressed = (e) => {\n    let key = String.fromCharCode(e.which);\n    if ('alrp<'.indexOf(key) !== -1) playSound();\n\n    switch (String.fromCharCode(e.which)) {\n      case 'a':\n        e.preventDefault();\n\n        this.taskInput.focus();\n        break;\n      case 'l':\n        e.preventDefault();\n        this.props.actions.getListOfLists();\n        break;\n      case 'r':\n        e.preventDefault();\n        this.reload();\n        break;\n      case 'p':\n        e.preventDefault();\n        this.mark();\n        break;\n      case '<':\n        e.preventDefault();\n        if (this.props.previous_list) this.listChanger(this.props.previous_list.name);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /* Edit header submit */\n  handleHeaderSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  handleKeyDownAtTask = (e) => {\n    if (e.keyCode === 27) {\n      this.taskInput.blur();\n      this.setState({\n        task: '',\n      });\n    }\n  };\n\n  /* Edit header keypress */\n  handleKeyDownAtHeader = (e) => {\n    switch (e.key) {\n      case 'Enter':\n      case 'Tab':\n        this.changeListName(e);\n        break;\n      case 'Escape':\n        this.setState({ listNameOnEdit: false });\n        break;\n      default:\n        break;\n    }\n  };\n\n  /* New task submit */\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.taskInput.blur();\n\n    let dataToSave = this.prepareClone(),\n      highlightIndex = Math.min(this.state.itemsToDo.length, CONFIG.user.settings.addNewAt - 1),\n      taskToAdd = this.state.task.replace(/(^\\s+|\\s+$)/g, '');\n\n    dataToSave.itemsToDo = this.state.itemsToDo;\n    dataToSave.itemsToDo.splice(CONFIG.user.settings.addNewAt - 1, 0, taskToAdd);\n    dataToSave.itemsToDo = _.unique(dataToSave.itemsToDo);\n    dataToSave.taskToAdd = taskToAdd;\n\n    this.setState({\n      lastAction: dataToSave.lastAction,\n      itemsToDo: dataToSave.itemsToDo,\n      highlightIndex: highlightIndex,\n      task: '',\n    });\n    this.props.actions.checkAndSave(this.serialize(dataToSave));\n  };\n\n  /* User input */\n  onChange = (e) => {\n    this.setState({ task: e.target.value });\n  };\n\n  importList = (listId) => {\n    let data = {\n      firstListId: listId,\n      secondListId: this.props.list._id,\n    };\n    this.props.actions.importList(data);\n  };\n\n  exportList = (listId) => {\n    let data = {\n      listId: this.props.list._id,\n      toListId: listId,\n    };\n    this.props.actions.exportList(data);\n  };\n\n  makeListOption = (list) => (\n    <option key={'o-' + list._id} value={list._id}>\n      {list.name}\n    </option>\n  );\n\n  /* Select for loading tasks from another list */\n  displayImportBlock = () => {\n    if (this.state.immutable) return null;\n\n    return (\n      <select\n        className=\"import-select\"\n        onChange={(e) => {\n          if (e.target.value) this.importList(e.target.value);\n        }}\n      >\n        <option value=\"\">Import list</option>\n        {this.props.immutables.map((list) => this.makeListOption(list))}\n      </select>\n    );\n  };\n\n  /* Select for exporting tasks to another list */\n  displayExportBlock = () => {\n    if (this.state.immutable) return null;\n\n    return (\n      <select\n        className=\"import-select\"\n        onChange={(e) => {\n          if (e.target.value) this.exportList(e.target.value);\n        }}\n      >\n        <option value=\"\">Export to</option>\n        {this.props.exportables.map((list) => this.makeListOption(list))}\n      </select>\n    );\n  };\n\n  /* Header - edit mode or not */\n  manageHeader = () => {\n    if (!this.state.listNameOnEdit)\n      return (\n        <div>\n          <h1>{this.state.listName}</h1>{' '}\n          <span\n            className={'small action-button glyphicon glyphicon glyphicon-pencil'}\n            aria-hidden=\"true\"\n            onClick={this.editListName}\n          />\n        </div>\n      );\n\n    return (\n      <h1>\n        <form onSubmit={this.handleHeaderSubmit}>\n          <input\n            ref={(input) => {\n              this.headerInput = input;\n            }}\n            className=\"task-input\"\n            defaultValue={this.state.listName}\n            onFocus={disableHotKeys}\n            onKeyDown={this.handleKeyDownAtHeader}\n            onBlur={this.changeListName}\n          />\n        </form>\n      </h1>\n    );\n  };\n\n  render() {\n    let markTitle = this.state.immutable ? (\n        <span>\n          Un<u>p</u>rotect\n        </span>\n      ) : (\n        <span>\n          <u>P</u>rotect\n        </span>\n      ),\n      markGlyphicon = this.state.immutable ? 'screen-shot' : 'exclamation-sign',\n      expandToDoGlyphicon = this.state.expandToDo ? 'glyphicon-resize-small' : 'glyphicon-resize-full',\n      expandDoneGlyphicon = this.state.expandDone ? 'glyphicon-resize-small' : 'glyphicon-resize-full';\n\n    return (\n      <div>\n        {this.manageHeader()}\n        <h3>\n          Finished ({this.state.itemsDone.length})\n          {Utils.overLength('displayDoneLength', this.state.itemsDone) && (\n            <span\n              className={'small action-button glyphicon ' + expandDoneGlyphicon}\n              aria-hidden=\"true\"\n              onClick={this.expand.bind(this, 'expandDone')}\n            />\n          )}\n          {'  '}\n          {this.state.itemsDone.length > 0 && (\n            <span\n              className=\"small action-button glyphicon glyphicon-trash\"\n              aria-hidden=\"true\"\n              onClick={this.clearDone}\n            />\n          )}\n        </h3>\n        <TasksDoneList items={this.state.itemsDone} undone={this.unDoneTask} expand={this.state.expandDone} />\n        <hr />\n        <h3>\n          Remaining ({this.state.itemsToDo.length})\n          {Utils.overLength('displayListLength', this.state.itemsToDo) && (\n            <span\n              className={'small list-item action-button glyphicon ' + expandToDoGlyphicon}\n              aria-hidden=\"true\"\n              onClick={this.expand.bind(this, 'expandToDo')}\n            />\n          )}\n        </h3>\n        <TasksList\n          items={this.state.itemsToDo}\n          highlightIndex={this.state.highlightIndex}\n          immutable={this.state.immutable}\n          delete={this.removeTask}\n          move={this.moveOutside}\n          toTop={this.toTop}\n          postpone={this.postponeTask}\n          procrastinate={this.procrastinateTask}\n          openListByName={this.listChanger}\n          reloadNeeded={this.state.reloadNeeded}\n          done={this.doneTask}\n          expand={this.state.expandToDo}\n        />\n\n        {!this.state.immutable && (\n          <div>\n            <hr />\n            <h3>Add new:</h3>\n            <form onSubmit={this.handleSubmit}>\n              <input\n                className=\"task-input\"\n                ref={(input) => {\n                  this.taskInput = input;\n                }}\n                value={this.state.task}\n                onFocus={disableHotKeys.bind(this)}\n                onBlur={registerHotKeys.bind(this, this.checkKeyPressed)}\n                onKeyDown={this.handleKeyDownAtTask}\n                onChange={this.onChange}\n              />\n              <button disabled={!this.state.task.trim()}>Add task</button>\n            </form>\n          </div>\n        )}\n        <hr />\n        {this.displayImportBlock()}\n        {this.displayExportBlock()}\n        <button disabled={this.state.task.trim()} onClick={this.mark}>\n          <span className={'glyphicon glyphicon-' + markGlyphicon} aria-hidden=\"true\" /> {markTitle}\n        </button>\n        <button onClick={this.reload}>\n          <span className={'glyphicon glyphicon-refresh'} aria-hidden=\"true\" /> <u>R</u>eload\n        </button>\n        {this.props.previous_list && (\n          <button\n            disabled={this.state.task.trim()}\n            onClick={this.listChanger.bind(this, this.props.previous_list.name)}\n          >\n            <span className=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\" /> {this.props.previous_list.name}\n          </button>\n        )}\n        <button disabled={this.state.task.trim()} onClick={this.props.actions.getListOfLists}>\n          <span className=\"glyphicon glyphicon-tasks\" aria-hidden=\"true\" /> <u>L</u>ists\n        </button>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  (dispatch) => ({\n    actions: bindActionCreators(\n      {\n        getAList: getAList,\n        getListOfLists: getListOfLists,\n        checkAndSave: checkAndSave,\n        importList: importList,\n        exportList: exportList,\n        addOrOpenAList: addOrOpenAList,\n        moveOutside: moveOutside,\n      },\n      dispatch,\n    ),\n  }),\n)(TasksApp);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport CONFIG from '../config.js';\nimport { copyOrMoveToNew, getAList, moveToList, prependToAList } from '../store/actions/list-actions';\n\nclass Move extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      newListName: '',\n      movingItem: props.task,\n    };\n  }\n\n  /* Returns back to the same list with no changes */\n  back = () => {\n    this.props.actions.getAList(this.props.from_list.listId);\n  };\n\n  /* Moves or copies item to new list */\n  // copyOrMoveToNew = (toListName, move) => {};\n\n  /* Moves item to another list */\n  move = (toListId) => {\n    this.props.actions.moveToList({\n      listId: toListId,\n      fromListId: this.props.from_list.listId,\n      task: this.props.task,\n    });\n  };\n\n  /* Copies item to another list byt its id*/\n  copy = (toListId) => {\n    this.props.actions.prependToAList({ listId: toListId, task: this.props.task });\n  };\n\n  /* To List */\n  displayToButton = (list) => {\n    if (list._id === this.props.from_list.listId) return null;\n    return (\n      <tr key={'tr' + list._id}>\n        <td>\n          To: <strong>{list.name}</strong>\n        </td>\n        <td>\n          <button onClick={this.move.bind(this, list._id, list.name, false)}>Move</button>{' '}\n          <button onClick={this.copy.bind(this, list._id)}>Copy</button>\n        </td>\n      </tr>\n    );\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.actions.copyOrMoveToNew({\n      fromListId: this.props.from_list.listId,\n      task: this.props.task,\n      listName: this.state.newListName,\n      move: true,\n    });\n  };\n  //\n  // copyToNew = () => {\n  //     this.props.actions.copyOrMoveToNew({\n  //         fromListId: this.props.from_list.listId,\n  //         task: this.props.task,\n  //         listName: this.state.newListName,\n  //         move: false\n  //     });\n  // };\n  //\n  onListInputChange = (e) => {\n    this.setState({ newListName: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h2>{this.state.movingItem.substring(0, CONFIG.maxTaskLength)}</h2>\n        <table className=\"table table-hover\">\n          <tbody>{this.props.lists.map((list) => this.displayToButton(list))}</tbody>\n        </table>\n        <hr />\n        <form onSubmit={this.handleSubmit}>\n          <input className=\"list-input\" value={this.state.newListName} onChange={this.onListInputChange} />\n          <button disabled={!this.state.newListName.trim()} type=\"submit\">\n            Move to new list\n          </button>\n        </form>\n        <hr />\n        <button onClick={this.back}>Back to {this.props.from_list.name}</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  (dispatch) => ({\n    actions: bindActionCreators(\n      {\n        getAList: getAList,\n        moveToList: moveToList,\n        copyOrMoveToNew: copyOrMoveToNew,\n        prependToAList: prependToAList,\n      },\n      dispatch,\n    ),\n  }),\n)(Move);\n","import React, { Component } from 'react';\n\nclass Failure extends Component {\n  defaultReload = () => {\n    window.location.reload();\n  };\n\n  render() {\n    let msg = this.props.msg ? this.props.msg : 'Ooops, something went wrong...';\n    let onClick = this.props.onClick ? this.props.onClick : this.defaultReload;\n    return (\n      <div>\n        <br />\n        {msg}\n        <br />\n        Please\n        <button onClick={onClick}>reload</button>\n      </div>\n    );\n  }\n}\n\nexport default Failure;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport CONST from '../utils/constants.js';\nimport { Spinner } from './Spinner.jsx';\nimport * as listActions from '../store/actions/list-actions';\nimport ListsApp from './ListsApp.jsx';\nimport TasksApp from './TasksApp.jsx';\nimport Move from './Move.jsx';\nimport Failure from './Failure.jsx';\n\nclass App extends Component {\n  static propTypes = {\n    mode: PropTypes.string,\n    openAtStartup: PropTypes.string,\n  };\n\n  componentDidMount() {\n    if (!this.props.mode) {\n      if (this.props.openAtStartup) {\n        // Uncomment when opening list at startup is back in fashion\n        // this.props.dispatch(listActions.addOrOpenAList(this.props.openAtStartup));\n      }\n      this.props.dispatch(listActions.getListOfLists());\n    }\n  }\n\n  switcher = () => {\n    if (!this.props.mode) {\n      return <div className=\"error\">mode undefined!</div>;\n    }\n\n    if (this.props.mode === CONST.mode.MODE_LOADING) {\n      return Spinner();\n    }\n\n    if (this.props.mode === CONST.mode.MODE_LIST_OF_LISTS) {\n      return <ListsApp lists={this.props.lists} />;\n    }\n\n    if (this.props.mode === CONST.mode.MODE_A_LIST) {\n      return (\n        <TasksApp\n          list={this.props.a_list}\n          immutables={this.props.lists.filter((item) => item.immutable)}\n          exportables={this.props.lists\n            .filter((item) => item._id !== this.props.a_list._id && !item.immutable)\n            .slice(0, 20)}\n          previous_list={\n            this.props.from_list && this.props.a_list._id === this.props.from_list.listId ? null : this.props.from_list\n          }\n        />\n      );\n    }\n\n    if (this.props.mode === CONST.mode.MODE_MOVE) {\n      return (\n        <Move\n          lists={this.props.lists.filter((item) => !item.immutable)}\n          task={this.props.task}\n          from_list={this.props.from_list}\n        />\n      );\n    }\n\n    if (this.props.mode === CONST.mode.DATA_CONFLICT) {\n      return <Failure msg=\"Data conflict\" />;\n    }\n\n    if (this.props.mode === CONST.mode.MODE_ERROR) {\n      return <Failure onClick={window.location.reload} />;\n    }\n\n    return <div className=\"error\">Mode {this.props.mode} not impelemented</div>;\n  };\n\n  render() {\n    return this.switcher();\n  }\n}\n\nexport default connect((state) => ({\n  mode: state.app.mode,\n  lists: state.app.lists,\n  a_list: state.app.a_list,\n  task: state.app.task,\n  from_list: state.app.from_list,\n}))(App);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Status extends Component {\n  render() {\n    return <div>{this.props.status_msg}</div>;\n  }\n}\n\nexport default connect((state) => ({\n  status_msg: state.app.status_msg,\n}))(Status);\n","import React, { Component } from 'react';\nimport CONFIG from '../config.js';\n\nclass User extends Component {\n  normaliser = (val, base) => {\n    return ('00' + Math.floor((val * 256) / base).toString(16)).substr(-2, 2);\n  };\n\n  versionColor = () => {\n    let str = CONFIG.version.replace(/-/g, '');\n    return (\n      '#' +\n      this.normaliser(str.substring(2, 4), 31) +\n      this.normaliser(str.substring(0, 2), 12) +\n      this.normaliser(str.substring(4, 6), 24)\n    );\n  };\n\n  /* The Renderer */\n  render() {\n    return (\n      <div>\n        <span className=\"list-item\">\n          <span style={{ color: this.versionColor() }}> {CONFIG.version}</span>{' '}\n          <small>\n            <b>{process.env.NODE_ENV}</b>\n          </small>\n        </span>\n        <span\n          className=\"glyphicon glyphicon-cog action-button\"\n          aria-hidden=\"true\"\n          // onClick={this.renderSettings.bind(this, this.props.lists)}\n        />\n        <span className=\"action-button\">{CONFIG.user.name}</span>\n        <audio id=\"clickSound\" src={CONFIG.clickSound} />\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default User;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { buildStore } from './store/store';\nimport { createLogger } from 'redux-logger';\n\nimport CONFIG from './config.js';\nimport App from './components/App';\nimport Status from './components/Status';\nimport User from './components/User';\n\nwindow.onbeforeunload = function() {\n  return 'Do you really want to leave ToDo app?';\n  //if we return nothing here (just calling return;) then there will be no pop-up question at all\n  //return;\n};\n\nlet middleware = [];\n\nif (window.devToolsExtension) {\n  console.log('window.devToolsExtension is used: no Redux spam in console.');\n} else {\n  middleware.push(createLogger());\n}\nconst store = buildStore(middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store} openAtStartup={CONFIG.user.settings.openListIfExists} />\n  </Provider>,\n  CONFIG.appNode,\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Status store={store} />\n  </Provider>,\n  CONFIG.statusNode,\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <User store={store} />\n  </Provider>,\n  CONFIG.userNode,\n);\n"],"sourceRoot":""}